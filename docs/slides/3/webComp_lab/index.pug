extends  ../../../_part/_baseShell

block head
	title Agenda
	include ../../../_part/_header

block main
	style.
		.section {
			background-size: cover;
			background-attachment: fixed;
			background-image: url(res/beach768.jpg);
		}

		.section1 {
			background-image: url(res/beach768.jpg);
		}
		.section2 {
			background-image: url(res/city768.jpg);
		}
		.section3{
			background-image: url(res/light768.jpg);
		}
		.section4{
			background-image: url(res/road768.jpg);
		}

	#fullpage
		.section1.section
			.mui-container-fluid
				.mui-panel
					H3 Web Components, and Business Logic 

		.section2.section
			.mui-container-fluid
				.mui-panel
					H3 There are many
					a(href='http://jeffcarp.github.io/frontend-hyperpolyglot/', target="_blank") Frontend polyglot

		.section1.section
			.mui-container-fluid
				.mui-panel
					H3 Some are DOM based:
					p Polymer, AMP, (Predix, Vaadmin), RIOT(like react), Vue?, Standard

		.section3.section
			.mui-container-fluid
				.mui-panel
					p Example standard comp:
					code
						pre.
							template#xfirst-el
							style.
								p { color: orange; }
							p I'm Shady
							script.
								class FirstEl extends HTMLElement {
									constructor() {
										super()
										let shadowRoot = this.attachShadow({mode: 'open'})
										const t = document.querySelector('#xfirst-el')// add the dom
										const instance = t.content.cloneNode(true)
										shadowRoot.appendChild(instance)
									}//()
									tst() { console.log('XXX') }
								}//class
		.section4.section
			.mui-container-fluid
				.mui-panel
					p Example script to load a component on a page:
					code
						pre.
							_loadedComp : {'exComp': true} // don't load 2x
							loadComp: function($here, url, cb) { //load template, don't forget #comps
								if(url in TS._loadedComp) {//guard: we loaded it before, thank you
									cb()
									return
								} else {
									fetch(url, {
										method: 'get'
									}).then(function(reSPonse) {
										if (!reSPonse.ok) {
											throw Error(reSPonse.statusText)
										}
										return reSPonse.text()
									}).then(function(txt) {
										TS._loadedComp[url] = true
										$here.append( txt )
										cb()
									})
								}
							}//()

		.section3.section
			.mui-container-fluid
				.mui-panel
					p Example page using a component:
					code
						pre.
							&lt div class="mui-container-fluid"&gt
								&ltfirst-el&gt&lt/first-el&gt
							&lt/div&gt
							&ltscript&gt
								function UIinit() {
									loadComp($('#comps'),'/_webComp/first.html', UIComp1Init)
								}
								function UIComp1Init() {//this does not execute yet
									var el = customElements.get('first-el')
									if(!el) // if it is not defined, define:
										customElements.define('first-el', FirstEl)// loaded w/ template
									var m = document.querySelector('first-el')
									m.tst() // talk to it
								}
							&lt/script&gt


		.section2.section
			.mui-container-fluid
				.mui-panel
					H3 Best practices
					ul
						li No Data Services in Web Components
						li Trivial, like a button is not a component. BEM or a 'Card' is
						

		.section1.section
			.mui-container-fluid
				.mui-panel
					H3 Sometimes there are 2 or more components on page
					H4 So... they may need to talk to each other.
					H3 Good idea is to have an Observer pattern. 
					H4 

		.section3.section
			.mui-container-fluid
				.mui-panel
					p Example page using 2 components:
					code
						pre.
							.mui-container-fluid
								c-1
								c-2
							script.
								TS.onAppReady(UIinit)
								let _blx // a dictionay map of observers
								function UIinit() {
									_blx = new BLX(null) // can / should have folder local class
									TS.loadComp($('#comps'),'/_webComp/C1.html', UIComp1Init)
									TS.loadComp($('#comps'),'/_webComp/C2.html', UIComp2Init)
								}
								function UIComp1Init() {
									var el = customElements.get('c-1')
									if(!el) // if it is not defined, define:
										customElements.define('c-1', C1El)// loaded w/ template
									let m = document.querySelector('c-1')
									m.init(_blx) // talk to it
								}
								function UIComp2Init() {
									var el = customElements.get('c-2')
									if(!el) // if it is not defined, define:
										customElements.define('c-2', C2El)// loaded w/ template
									let m = document.querySelector('c-2')
									m.init(_blx) // talk to it
								}



	script.
		TS.onAppReady(UIinit)
		function UIinit() {
			console.log('x')
			$('#fullpage').fullpage({
				//verticalCentered: false,
				css3:false
			})//config
		}

block footer
	include ../../../_part/_footer
